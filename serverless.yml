service: support-bot

frameworkVersion: '2'

package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

resources:
  Resources:
    SupportBot:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: support-bot-user-tickets
        KeySchema:
          - AttributeName: 'id'
            KeyType: 'HASH'
        AttributeDefinitions:
          - AttributeName: 'id'
            AttributeType: 'S'
          - AttributeName: userId
            AttributeType: 'S'
        BillingMode: PAY_PER_REQUEST  # $1.25 per million writes with 40k read/write capacity.      
        GlobalSecondaryIndexes:
          - IndexName: UserIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
  
functions:
  # Ticket endpoints
  createTicket:
    handler: 'src/ticket.create'
    description: "Create a Jira ticket and post a slack message"
    events: 
      - http:
          method: 'post'
          path: 'ticket'
  
  getTicket:
    handler: 'src/ticket.get'
    description: "Get all support tickets for a firm or a specific ticket ID"
    events:
      - http:
          method: 'get'
          path: 'ticket'

  postMessage:
    handler: 'src/conversation.post'
    description: "Post a slack message from the client"
    events: 
      - http:
          method: 'post'
          path: 'conversation'

  getConversation:
    handler: 'src/conversation.get'
    description: "Get a conversation from the database pertaining to a specific ticket"
    events: 
      - http:
          method: 'get'
          path: 'conversation'